[gd_resource type="VisualShader" load_steps=5 format=3 uid="uid://c1qvt5ny721te"]

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_ax8ec"]
output_port_for_preview = 0
parameter_name = "ColorParameter"
default_value_enabled = true
default_value = Color(0.576471, 0.247059, 0, 1)

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_luc67"]
parameter_name = "FloatParameter"
hint = 1
max = 16.0
default_value_enabled = true
default_value = 5.066

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_cob5b"]
parameter_name = "FloatParameter2"
hint = 1
max = 16.0
default_value_enabled = true
default_value = 5.0

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_m2plt"]

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform vec4 ColorParameter : source_color = vec4(0.576471, 0.247059, 0.000000, 1.000000);
uniform float FloatParameter : hint_range(0, 16) = 5.06599998474121;
uniform float FloatParameter2 : hint_range(0, 16) = 5;



void fragment() {
// ColorParameter:2
	vec4 n_out2p0 = ColorParameter;


// FloatParameter:3
	float n_out3p0 = FloatParameter;


// FloatParameter:4
	float n_out4p0 = FloatParameter2;


// VectorOp:5
	vec3 n_out5p0 = vec3(n_out3p0) + vec3(n_out4p0);


// Output:0
	COLOR.rgb = vec3(n_out2p0.xyz);
	COLOR.a = n_out5p0.x;


}
"
mode = 1
flags/light_only = false
nodes/fragment/2/node = SubResource("VisualShaderNodeColorParameter_ax8ec")
nodes/fragment/2/position = Vector2(-160, -40)
nodes/fragment/3/node = SubResource("VisualShaderNodeFloatParameter_luc67")
nodes/fragment/3/position = Vector2(-160, 360)
nodes/fragment/4/node = SubResource("VisualShaderNodeFloatParameter_cob5b")
nodes/fragment/4/position = Vector2(-160, 660)
nodes/fragment/5/node = SubResource("VisualShaderNodeVectorOp_m2plt")
nodes/fragment/5/position = Vector2(140, 340)
nodes/fragment/connections = PackedInt32Array(2, 0, 0, 0, 3, 0, 5, 0, 4, 0, 5, 1, 5, 0, 0, 1)
